// Generated by Dagger (https://dagger.dev).
package com.orange.tariffs.usecase;

import com.example.abstractmyorange.domain.repositories.ITariffsRepo;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CostCalculationUseCase_Factory implements Factory<CostCalculationUseCase> {
  private final Provider<ITariffsRepo> tariffRepoProvider;

  public CostCalculationUseCase_Factory(Provider<ITariffsRepo> tariffRepoProvider) {
    this.tariffRepoProvider = tariffRepoProvider;
  }

  @Override
  public CostCalculationUseCase get() {
    return newInstance(tariffRepoProvider.get());
  }

  public static CostCalculationUseCase_Factory create(Provider<ITariffsRepo> tariffRepoProvider) {
    return new CostCalculationUseCase_Factory(tariffRepoProvider);
  }

  public static CostCalculationUseCase newInstance(ITariffsRepo tariffRepo) {
    return new CostCalculationUseCase(tariffRepo);
  }
}
