// Generated by Dagger (https://dagger.dev).
package com.example.abstractmyorange.domain.usecase;

import com.example.abstractmyorange.domain.repositories.ITariffsRepo;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class OffersLoadingUseCase_Factory implements Factory<OffersLoadingUseCase> {
  private final Provider<ITariffsRepo> tariffRepoProvider;

  public OffersLoadingUseCase_Factory(Provider<ITariffsRepo> tariffRepoProvider) {
    this.tariffRepoProvider = tariffRepoProvider;
  }

  @Override
  public OffersLoadingUseCase get() {
    return newInstance(tariffRepoProvider.get());
  }

  public static OffersLoadingUseCase_Factory create(Provider<ITariffsRepo> tariffRepoProvider) {
    return new OffersLoadingUseCase_Factory(tariffRepoProvider);
  }

  public static OffersLoadingUseCase newInstance(ITariffsRepo tariffRepo) {
    return new OffersLoadingUseCase(tariffRepo);
  }
}
